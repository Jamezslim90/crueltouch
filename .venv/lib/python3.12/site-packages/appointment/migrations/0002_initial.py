# Generated by Django 5.0.7 on 2024-11-07 07:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("appointment", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="appointment",
            name="client",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="appointment_request",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="appointment.appointmentrequest",
            ),
        ),
        migrations.AddField(
            model_name="appointmentreschedulehistory",
            name="appointment_request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reschedule_histories",
                to="appointment.appointmentrequest",
            ),
        ),
        migrations.AddField(
            model_name="emailverificationcode",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="passwordresettoken",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="password_reset_tokens",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="paymentinfo",
            name="appointment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="appointment.appointment",
            ),
        ),
        migrations.AddField(
            model_name="appointmentrequest",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="appointment.service"
            ),
        ),
        migrations.AddField(
            model_name="staffmember",
            name="services_offered",
            field=models.ManyToManyField(to="appointment.service"),
        ),
        migrations.AddField(
            model_name="staffmember",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="dayoff",
            name="staff_member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="appointment.staffmember",
            ),
        ),
        migrations.AddField(
            model_name="appointmentreschedulehistory",
            name="staff_member",
            field=models.ForeignKey(
                help_text="The previous staff member of the appointment before it was rescheduled.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="appointment.staffmember",
            ),
        ),
        migrations.AddField(
            model_name="appointmentrequest",
            name="staff_member",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="appointment.staffmember",
            ),
        ),
        migrations.AddField(
            model_name="workinghours",
            name="staff_member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="appointment.staffmember",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workinghours",
            unique_together={("staff_member", "day_of_week")},
        ),
    ]
